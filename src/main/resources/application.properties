quarkus.native.container-runtime=docker
quarkus.http.port=8080

# remote.host=quarkus-serverless-server
remote.host=http://quarkus-serverless-server-serverless-apps.apps.cluster-84d2.84d2.example.opentlc.com/
org.acme.employee.EmployeeService/mp-rest/url=${REMOTE_SVC:${remote.host}}
org.acme.employee.EmployeeService/mp-rest/scope=javax.inject.Singleton


quarkus.knative.env.vars.REMOTE_SVC=http://quarkus-serverless-server-serverless-apps.apps.cluster-84d2.84d2.example.opentlc.com

# instructs quarkus to build and deploy to kubernetes/openshift, and
# create an ingress Route, and to trust the Kubernetes API since we're using self-signed,
## quarkus.kubernetes.deploy=true
## quarkus.openshift.expose=true
## quarkus.kubernetes.expose=true
## quarkus.kubernetes.deployment-target=knative
## quarkus.kubernetes-client.trust-certs=true
# set the Kubernetes namespace which will be used to run the application
## quarkus.container-image.group=serverless-apps
# set the container image registry - this is the standard URL used to refer to the internal OpenShift registry
## quarkus.container-image.registry=image-registry.openshift-image-registry.svc:5000